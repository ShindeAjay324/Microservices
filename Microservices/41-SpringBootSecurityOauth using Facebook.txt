Stage#1 Register Client with Auth Server
(Facebook, google, github)


*) Goto : https://developers.facebook.com/
 > Click on MyApps
 > Choose Consumer > Next
 > Enter app name  > Next
 > Click on App name (Top left corner)
 > Create test app > Finish
 > Click on Settings > Basics
 > copy client-id: 1651876458565698
 	secret: 0b407987f0c3fea6bd82fb155819e2db



Dependencies : spring web, springsecurity, oauth2Client, devtools
======================================================================

--application.yml---
spring:
  security:
    oauth2:
      client:
        registration:
          facebook:
            client-id: 1651876458565698
            client-secret: 0b407987f0c3fea6bd82fb155819e2db

==========================================================
SecurityConfig.java
package com.app.nitin.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
public class SecurityConfig {

	//authentication ...
	
	//authorization
	@Bean
	public SecurityFilterChain configure(HttpSecurity http) throws Exception {
		http.antMatcher("/**")
		.authorizeRequests()
		.antMatchers("/","/login**").permitAll()
		.anyRequest().authenticated()
		.and()
		.oauth2Login();
		
		return http.build();
	}
}
========UserController========
package com.app.nitin.rest;

import java.security.Principal;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;

@Controller
public class UserController {

	@GetMapping("/secure")
	public String showHome(Principal p) 
	{
		System.out.println(p);
		return "Secure";
	}
	
	@GetMapping("/")
	public String showLogin() 
	{
		return "Index";
	}
}

==========Index.html===========
<html xmlns:th="https://www.thymeleaf.org/">
<head>
	<title>WELCOME TO LOGIN</title>
</head>
<body>
	<h2>Spring Security using OAuth2.x</h2>
	<a href="secure">Login </a>
</body>
</html>

==============Secure.html====================
<html xmlns:th="https://www.thymeleaf.org/">
<head>
	<title>WELCOME TO LOGIN</title>
</head>
<body>
	<h2>WELCOME</h2>
	<span th:text="${#authentication.name}"></span>
</body>
</html>
===============================================================================


Step 2: Configure OAuth2 Client in application.yml or application.properties
You need to configure your OAuth2 client provider (e.g., Google, GitHub, etc.) with client credentials.


application.yaml
spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: your-google-client-id
            client-secret: your-google-client-secret
            scope: profile, email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
          github:
            client-id: your-github-client-id
            client-secret: your-github-client-secret
            scope: user:email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"


login.html
==========
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Login</title>
</head>
<body>
    <h1>Login with OAuth2</h1>
    <a href="/oauth2/authorization/google">Login with Google</a><br/>
    <a href="/oauth2/authorization/github">Login with GitHub</a>
</body>
</html>

@Controller
public class LoginController {

    @GetMapping("/login")
    public String login() {
        return "login";
    }

    @GetMapping("/home")
    public String home() {
        return "home";
    }
}

home.html
=========
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Home</title>
</head>
<body>
    <h1>Welcome Home!</h1>
    <p>You have successfully logged in with OAuth2.</p>
</body>
</html>















